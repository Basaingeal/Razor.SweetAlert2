trigger:
  - master
  - develop
  - release/*

pr:
  - master
  - develop
  - release/*

variables:
  buildConfiguration: "Release"

stages:
  - stage: buildStage
    displayName: Build
    jobs:
      - job: lintLibrary
        displayName: Lint
        pool:
          vmImage: "windows-latest"
        steps:
          - task: Npm@1
            displayName: "Installing NPM Packages"
            inputs:
              command: install

          - task: Npm@1
            displayName: "Linting"
            inputs:
              command: custom
              customCommand: run lint

          - task: Npm@1
            displayName: "Checking Prettier"
            inputs:
              command: custom
              customCommand: run prettier:check

          - task: Npm@1
            displayName: "Checking Types"
            inputs:
              command: custom
              customCommand: run build:tsc

      - job: buildLibrary
        displayName: Build
        dependsOn:
        pool:
          vmImage: "windows-latest"
        steps:
          - task: PowerShell@2
            displayName: "Setting build number"
            inputs:
              filePath: "./versioning.ps1"

          - task: Npm@1
            displayName: "Installing NPM Packages"
            inputs:
              command: "install"

          - task: Npm@1
            displayName: "Building JS and CSS"
            inputs:
              command: custom
              customCommand: "run build"

          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: 'sdk'
              version: '8.0.x'
              includePreviewVersions: true

          - task: DotNetCoreCLI@2
            displayName: "Restoring Nuget Packages"
            inputs:
              command: "restore"
              projects: "**/*.csproj"
              feedsToUse: "select"
              verbosityRestore: "Normal"

          - task: DotNetCoreCLI@2
            displayName: "Building"
            inputs:
              command: "build"
              projects: "**/*.csproj"
              arguments: "-c $(buildConfiguration)"

          - task: DotNetCoreCLI@2
            displayName: "Packing"
            inputs:
              command: "pack"
              packagesToPack: "**/*.csproj"
              versioningScheme: "byBuildNumber"
              verbosityPack: "Normal"

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: NuGetPackage

          - publish: CHANGELOG.md
            artifact: Changelog

  - stage: deployStage
    displayName: Deploy
    dependsOn: buildStage
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'IndividualCI'))
    jobs:
      - deployment: githubRelease
        displayName: Create Github Release
        pool:
          vmImage: "windows-latest"
        environment: currietechnologies-prod
        strategy:
          runOnce:
            deploy:
              steps:
                - task: GitHubRelease@1
                  displayName: Create GitHub Release
                  inputs:
                    gitHubConnection: "github connection 1"
                    repositoryName: "$(Build.Repository.Name)"
                    action: "create"
                    target: "$(Build.SourceVersion)"
                    tagSource: "userSpecifiedTag"
                    tag: "v$(Build.BuildNumber)"
                    title: "v$(Build.BuildNumber)"
                    releaseNotesFilePath: "$(Pipeline.Workspace)/Changelog/CHANGELOG.md"
                    assets: "$(Pipeline.Workspace)/NuGetPackage/*.nupkg"
                    addChangeLog: false

      - deployment: privateNuget
        displayName: Push to Private NuGet Feed
        pool:
          vmImage: "windows-latest"
        environment: currietechnologies-prod
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DotNetCoreCLI@2
                  displayName: "Push to Private NuGet Feed"
                  inputs:
                    command: "push"
                    packagesToPush: "$(Pipeline.Workspace)/NuGetPackage/*.nupkg"
                    nuGetFeedType: "internal"
                    publishVstsFeed: "92bb098c-7077-481e-813d-9c0d49ec780d"

      - deployment: publicNuget
        displayName: Push to NuGet.org
        pool:
          vmImage: "windows-latest"
        environment: currietechnologies-prod
        strategy:
          runOnce:
            deploy:
              steps:
                - task: NuGetCommand@2
                  displayName: Push to NuGet.org
                  inputs:
                    command: "push"
                    packagesToPush: "$(Pipeline.Workspace)/NuGetPackage/*.nupkg"
                    nuGetFeedType: "external"
                    publishFeedCredentials: "NuGet All"
                    verbosityPush: "Normal"
